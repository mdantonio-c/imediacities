version: '3'
#######################
# Link services inside API

services:
  backend:
    user: root
    volumes:
      - ..:/code/${COMPOSE_PROJECT_NAME}
      - ../imediastuff:/uploads
    environment:
      - APP_MODE=production
      - DEBUG_LEVEL=INFO
      - VANILLA_PACKAGE=${COMPOSE_PROJECT_NAME}
      - NGINX_ACTIVE=true

      # base the user/role mechanism on some database
      - AUTH_ENABLE=1
      # putting this here because it should not be configurable in .env
      - AUTH_SERVICE=neo4j

      - AUTH_REGISTER_FAILED_LOGIN=${AUTH_REGISTER_FAILED_LOGIN}
      - AUTH_FORCE_FIRST_PASSWORD_CHANGE=${AUTH_FORCE_FIRST_PASSWORD_CHANGE}
      - AUTH_VERIFY_PASSWORD_STRENGTH=${AUTH_VERIFY_PASSWORD_STRENGTH}
      - AUTH_MAX_PASSWORD_VALIDITY=${AUTH_MAX_PASSWORD_VALIDITY}
      - AUTH_DISABLE_UNUSED_CREDENTIALS_AFTER=${AUTH_DISABLE_UNUSED_CREDENTIALS_AFTER}
      - AUTH_MAX_LOGIN_ATTEMPTS=${AUTH_MAX_LOGIN_ATTEMPTS}
      - AUTH_SECOND_FACTOR_AUTHENTICATION=${AUTH_SECOND_FACTOR_AUTHENTICATION}

      # # neo connection
      - GRAPHDB_ENABLE=1
      - GRAPHDB_EXTERNAL=${GRAPHDB_EXTERNAL}
      - GRAPHDB_HOST=${GRAPHDB_HOST}
      - GRAPHDB_PORT=${GRAPHDB_BOLT_PORT}
      - GRAPHDB_PASSWORD=${GRAPHDB_PASSWORD}
   
      - CELERY_ENABLE=1
      - CELERY_EXTERNAL=${CELERY_EXTERNAL}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BROKER_HOST=${CELERY_BROKER_HOST}
      - CELERY_BROKER_PORT=${CELERY_BROKER_PORT}
    networks:
      graph_net:
      worker_net:
      proxy_net:
        aliases:
          - ${API_HOST}
      ftp_net:
    depends_on:
      - neo4j
      - ftp
      - swaggerui
    expose:
      - 8080

  frontend:
    networks:
      proxy_net:
        aliases:
          - html

  rabbit:
    networks:
      worker_net:
        aliases:
          - ${CELERY_BROKER_HOST}

  proxy:
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - ssl_dhparam:/etc/nginx/ssl/
      - ../assets/imc:/data/frontend/felask/static/assets
    networks:
      proxy_net:
    ports:
      - ${PROXY_DEV_PORT}:${PROXY_DEV_PORT}   # 80 redirect
      - ${PROXY_PROD_PORT}:${PROXY_PROD_PORT} # 443 SSL
    depends_on:
      - backend
      - frontend
    environment:
      DOMAIN: ${PROJECT_DOMAIN}
      MODE: ${LETSENCRYPT_MODE}


  neo4j:
    ports:
      - 9090:7474
      - 7687:7687
    # volumes:
    #   - rapydo_imediacity_graphdata:/data
    networks:
      graph_net:
        aliases:
          - ${GRAPHDB_HOST}

  worker:
    # command: sleep infinity
    build: ../builds/celery
    networks:
      graph_net:
      worker_net:
    depends_on:
      - rabbit
    volumes:
      - ..:/code/${COMPOSE_PROJECT_NAME}
      - ../imediastuff:/uploads
      # - ../imedia-pipeline:/imedia-pipeline
      # - ../imedia-pipeline-cin:/imedia-pipeline-cin
      - /opt/idmt:/opt/idmt
    environment:
      APP_MODE: production
      DEBUG_LEVEL: INFO
      VANILLA_PACKAGE: ${COMPOSE_PROJECT_NAME}

      # base the user/role mechanism on some database
      AUTH_ENABLE: 1
      # putting this here because it should not be configurable in .env
      AUTH_SERVICE: neo4j

      # # neo connection
      GRAPHDB_ENABLE: 1
      GRAPHDB_EXTERNAL: ${GRAPHDB_EXTERNAL}
      GRAPHDB_HOST: ${GRAPHDB_HOST}
      GRAPHDB_PORT: ${GRAPHDB_BOLT_PORT}
      GRAPHDB_PASSWORD: ${GRAPHDB_PASSWORD}

      CELERY_ENABLE: 1
      CELERY_EXTERNAL: ${CELERY_EXTERNAL}
      CELERY_BROKER: ${CELERY_BROKER}
      CELERY_BROKER_HOST: ${CELERY_BROKER_HOST}
      CELERY_BROKER_PORT: ${CELERY_BROKER_PORT}

  # swaggerui:
  #   ports:
  #     - 7777:80

  ftp:
    ports:
      - "21:21"
      - "30000-30019:30000-30019"
    volumes:
      - ../imediastuff:/home/ftpusers/
    networks:
      ftp_net:

volumes:
  letsencrypt_certs:
    driver: local
  ssl_dhparam:
    driver: local

networks:
    graph_net:
    proxy_net:
    worker_net:
    ftp_net:
