backend:
  volumes:
    - ..:/code/${COMPOSE_PROJECT_NAME}
    - ../imediastuff:/uploads
  environment:
    FLASK_DEBUG: 1
    APP_MODE: debug
    DEBUG_LEVEL: VERBOSE
    VANILLA_PACKAGE: ${COMPOSE_PROJECT_NAME}

    # base the user/role mechanism on some database
    AUTH_ENABLE: 1
    # putting this here because it should not be configurable in .env
    AUTH_SERVICE: neo4j

    AUTH_REGISTER_FAILED_LOGIN: ${AUTH_REGISTER_FAILED_LOGIN}
    AUTH_FORCE_FIRST_PASSWORD_CHANGE: ${AUTH_FORCE_FIRST_PASSWORD_CHANGE}
    AUTH_VERIFY_PASSWORD_STRENGTH: ${AUTH_VERIFY_PASSWORD_STRENGTH}
    AUTH_MAX_PASSWORD_VALIDITY: ${AUTH_MAX_PASSWORD_VALIDITY}
    AUTH_DISABLE_UNUSED_CREDENTIALS_AFTER: ${AUTH_DISABLE_UNUSED_CREDENTIALS_AFTER}
    AUTH_MAX_LOGIN_ATTEMPTS: ${AUTH_MAX_LOGIN_ATTEMPTS}
    AUTH_SECOND_FACTOR_AUTHENTICATION: ${AUTH_SECOND_FACTOR_AUTHENTICATION}
    
    # # neo connection
    GRAPHDB_ENABLE: 1
    GRAPHDB_EXTERNAL: ${GRAPHDB_EXTERNAL}
    GRAPHDB_HOST: ${GRAPHDB_HOST}
    GRAPHDB_PORT: ${GRAPHDB_BOLT_PORT}
    GRAPHDB_PASSWORD: ${GRAPHDB_PASSWORD}

    CELERY_ENABLE: 1
    CELERY_EXTERNAL: ${CELERY_EXTERNAL}
    CELERY_BROKER: ${CELERY_BROKER}
    CELERY_BROKER_HOST: ${CELERY_BROKER_HOST}
    CELERY_BROKER_PORT: ${CELERY_BROKER_PORT}

  ports:
    - 8081:5000

  links:
    - gdb:gdb
    - rabbit:queue
    - swagger:swagger
    - ftp:ftp

frontend:
  ports:
    - 80:5000
  environment:
    BACKEND_PORT: 8081
  volumes:
    - ../assets/imc:/data/frontend/felask/static/assets

worker:
  # command: sleep infinity
  build: ../builds/celery
  links:
    - gdb:gdb
    - rabbit:queue
  volumes:
    - ..:/code/${COMPOSE_PROJECT_NAME}
    - ../imediastuff:/uploads
    - ../imedia-pipeline:/imedia-pipeline
    - ../imedia-pipeline-cin:/imedia-pipeline-cin
  environment:
    APP_MODE: debug
    DEBUG_LEVEL: VERBOSE
    VANILLA_PACKAGE: ${COMPOSE_PROJECT_NAME}

    # base the user/role mechanism on some database
    AUTH_ENABLE: 1
    # putting this here because it should not be configurable in .env
    AUTH_SERVICE: neo4j

    # # neo connection
    GRAPHDB_ENABLE: 1
    GRAPHDB_EXTERNAL: ${GRAPHDB_EXTERNAL}
    GRAPHDB_HOST: ${GRAPHDB_HOST}
    GRAPHDB_PORT: ${GRAPHDB_BOLT_PORT}
    GRAPHDB_PASSWORD: ${GRAPHDB_PASSWORD}

    CELERY_ENABLE: 1
    CELERY_EXTERNAL: ${CELERY_EXTERNAL}
    CELERY_BROKER: ${CELERY_BROKER}
    CELERY_BROKER_HOST: ${CELERY_BROKER_HOST}
    CELERY_BROKER_PORT: ${CELERY_BROKER_PORT}
    

gdb:
  # command: sleep 9999999
  ports:
    - 9090:7474
    - 7687:7687

  # VERY TEMP... TO AVOID VOLUME RENAMING; NOT YET SUPPORTED
  volumes:
    - rapydo_imediacity_graphdata:/data
  # environment:
    # NEO4J_dbms_memory_pagecache_size: 2048M
    # NEO4J_dbms_memory_heap_maxSize: 4096M
    # NEO4J_dbms_allowFormatMigration: "true"

swagger:
  ports:
    - 7777:80

ftp:
  # image: stilliard/pure-ftpd:latest
  build: ../builds/ftp
  ports:
    - "21:21"
    - "30000-30019:30000-30019"
  volumes:
    - ${VOLUMES_PREFIX}_pureftpd:/etc/pure-ftpd/passwd
    - ../imediastuff:/home/ftpusers/
# /etc/ssl/private/ A directory containing a single pure-ftpd.pem file
# with the server's SSL certificates for TLS support. Optional TLS is
# automatically enabled when the container finds this file on startup.
  environment:
    PUBLICHOST: localhost
